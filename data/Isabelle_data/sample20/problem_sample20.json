{
    "problem": "theory AddCancelR\n  imports Main\nbegin\n\ndatatype mynat = MyZero (\"0\") | MySuc mynat\n\nfun myadd :: \"mynat \\<Rightarrow> mynat \\<Rightarrow> mynat\" where\n  \"myadd MyZero m = m\" |\n  \"myadd (MySuc n) m = MySuc (myadd n m)\"\n\ntheorem myadd_comm: \"myadd n m = myadd m n\"\n  sorry\n\nlemma myadd_cancel_l: \"myadd p n = myadd p m \\<longleftrightarrow> n = m\"\n  sorry\n\ntheorem add_cancel_r: \"myadd n p = myadd m p \\<longleftrightarrow> n = m\"\n(* Fill Your Proof Here *)\nend",
    "proof": "proof\n  assume \"myadd n p = myadd m p\"\n  then have \"myadd p n = myadd p m\" using myadd_comm by simp\n  then show \"n = m\" using myadd_cancel_l by simp\nnext\n  assume \"n = m\"\n  then show \"myadd n p = myadd m p\" by simp\nqed\n\nend",
    "proposition": "add_cancel_r",
    "id": 20
}