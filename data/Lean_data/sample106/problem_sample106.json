{
    "problem": "open Nat\n\n-- 定义加法函数\ndef add : Nat → Nat → Nat\n  | zero, m => m\n  | succ n', m => succ (add n' m)\n\n-- 定义乘法函数\ndef mul : Nat → Nat → Nat\n  | zero, _ => zero\n  | succ p, m => add m (mul p m)\n\n-- 证明加法结合律：add n (add m p) = add (add n m) p，使用 sorry 代替证明\ntheorem addAssoc (n m p : Nat) : add n (add m p) = add (add n m) p := by\n  sorry\n\n-- 证明乘法对加法的右分配律：mul (add n m) p = add (mul n p) (mul m p)\ntheorem mulAddDistrR (n m p : Nat) : mul (add n m) p = add (mul n p) (mul m p) := by\n  ",
    "proof": "  -- 对 n 进行归纳\n  induction n with\n  | zero =>\n    -- 基础情况：n = 0\n    simp [mul, add]\n  | succ n' ih =>\n    -- 归纳情况：n = succ n'\n    simp [mul, add]\n    rw [← addAssoc, ih]\n",
    "proposition": "mulAddDistrR",
    "id": "106.lean"
}