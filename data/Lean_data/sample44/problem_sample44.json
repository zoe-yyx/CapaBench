{
    "problem": "def convex (f : Int → Int) : Prop :=\n  ∀ x : Int, f (x - 1) + f (x + 1) ≥ 2 * f x\n\ndef mono (f : Int → Int) : Prop :=\n  ∀ n m : Int, n ≤ m → f n ≤ f m\n\ntheorem logicEx1 (T : (Int → Int) → (Int → Int)) :\n  (∀ f, mono f → mono (T f)) →\n  (∀ f, convex f → convex (T f)) →\n  (∀ f, mono f ∧ convex f → mono (T f) ∧ convex (T f)) := by\n  ",
    "proof": "  intros hMono hConvex f h\n  cases h with\n  | intro h_mono h_convex =>\n    constructor\n    -- 证明 mono (T f)\n    apply hMono\n    exact h_mono\n    -- 证明 convex (T f)\n    apply hConvex\n    exact h_convex\n",
    "proposition": "logicEx1",
    "id": "44.lean"
}