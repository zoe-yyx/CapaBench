{
    "problem": "Require Import Coq.Arith.PeanoNat.\n   Inductive nat := | O: nat | S (n: nat): nat.\n  Fixpoint add (n m: nat): nat :=   match n with   | O => m   | S n' => S (add n' m)   end.\n  Fixpoint mul (n m: nat): nat :=   match n with   | O => O   | S p => add m (mul p m)   end.\n   Theorem mul_add_distr_r:   forall n m p, mul (add n m) p = add (mul n p) (mul m p).\n Proof.\n Admitted.\n  Theorem mul_assoc:   forall n m p, mul n (mul m p) = mul (mul n m) p. \n(**********)\n(** Fill in your proof here*)\n(**********)",
    "proof": "Proof.   intros n m p; induction n; simpl.   + reflexivity.   + rewrite IHn, mul_add_distr_r.     reflexivity. Qed.",
    "proposition": "mul_assoc",
    "id": "./data/108.v"
}