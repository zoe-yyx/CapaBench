{
    "observation": "Require Import Coq.ZArith.ZArith.\n Require Import Coq.micromega.Psatz.\n Require Import Coq.Setoids.Setoid.\n Require Import Coq.Logic.Classical_Prop.\n Local Open Scope Z.\n Theorem forall_iff : forall (X : Type) (P Q : X -> Prop),   (forall x : X, P x <-> Q x) ->   ((forall x : X, P x) <-> (forall x : X, Q x)). \n(**********)\n(** Fill in your proof here*)\n(**********)",
    "planning_context": "\n1. Analyze the theorem structure:\n   - The theorem involves a universal quantification over a type X and two predicates P and Q.\n   - The goal is to prove a bi-implication (iff) between two universally quantified statements.\n\n2. Break down the proof into two directions:\n   a. (forall x : X, P x) -> (forall x : X, Q x)\n   b. (forall x : X, Q x) -> (forall x : X, P x)\n\n3. Proof strategy for each direction:\n   - Introduce the hypothesis (forall x : X, P x <-> Q x)\n   - Introduce the antecedent of the implication\n   - Use universal quantification to introduce an arbitrary x of type X\n   - Apply the bi-implication from the hypothesis to connect P x and Q x\n   - Use the antecedent to prove the consequent\n\n4. Detailed steps:\n   a. Left to right:\n      - Introduce hypotheses and arbitrary x\n      - Use the left-to-right direction of (P x <-> Q x)\n      - Apply the antecedent (forall x : X, P x) to prove Q x\n   \n   b. Right to left:\n      - Introduce hypotheses and arbitrary x\n      - Use the right-to-left direction of (P x <-> Q x)\n      - Apply the antecedent (forall x : X, Q x) to prove P x\n\n5. Combine the two directions to complete the bi-implication proof\n\n6. Potential tactics to use:\n   - intros (for introducing hypotheses and variables)\n   - split (for breaking down the bi-implication)\n   - apply (for applying hypotheses and lemmas)\n   - exact (for direct proof when the goal matches a hypothesis)\n\n7. Pay attention to:\n   - Proper scoping of variables and hypotheses\n   - Correct application of the bi-implication hypothesis (P x <-> Q x)\n   - Ensuring all introduced variables are properly generalized\n",
    "reasoning": "\nTo begin proving the theorem forall_iff, we should follow these steps:\n\n1. Introduce the universal quantifiers and hypotheses:\n   We need to introduce X, P, Q, and the hypothesis that (forall x : X, P x <-> Q x).\n\n2. Split the bi-implication:\n   The goal is to prove a bi-implication, so we should split it into two implications.\n\n3. Prove the forward direction:\n   For (forall x : X, P x) -> (forall x : X, Q x):\n   a. Introduce the hypothesis (forall x : X, P x)\n   b. Introduce an arbitrary x of type X\n   c. Use the hypothesis (P x <-> Q x) to transform the goal from Q x to P x\n   d. Apply the introduced hypothesis (forall x : X, P x) to prove P x\n\n4. Prove the backward direction:\n   For (forall x : X, Q x) -> (forall x : X, P x):\n   a. Introduce the hypothesis (forall x : X, Q x)\n   b. Introduce an arbitrary x of type X\n   c. Use the hypothesis (P x <-> Q x) to keep the goal as P x\n   d. Apply the introduced hypothesis (forall x : X, Q x) to prove Q x\n   e. Use the bi-implication (P x <-> Q x) again to prove P x from Q x\n\nThe acting agent should start by introducing the variables and hypothesis, then split the bi-implication. After that, they can proceed with proving each direction separately.\n",
    "reflection": "",
    "action": "Confirm final proving process: \nintros X P Q H.\nsplit.\n- intros H1 x.\n  specialize (H x).\n  apply H.\n  apply H1.\n- intros H1 x.\n  specialize (H x).\n  apply H.\n  apply H1.\n"
}