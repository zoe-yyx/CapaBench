{
    "problem": "Require Import Coq.Arith.PeanoNat.\n   Inductive nat := | O: nat | S (n: nat): nat.\n  Fixpoint add (n m: nat): nat :=   match n with   | O => m   | S n' => S (add n' m)   end.\n  Theorem add_cancel_l:   forall n m p, add p n = add p m <-> n = m. \n(**********)\n(** Fill in your proof here*)\n(**********)",
    "proof": "Proof.   intros n m p; split.   + induction p; simpl; intros H.     - tauto.     - injection H as H.       pose proof IHp H.       tauto.   + intros H.     rewrite H.     reflexivity. Qed.",
    "proposition": "add_cancel_l",
    "id": "./data/101.v"
}