{
    "problem": "Require Import Coq.Arith.PeanoNat.\n   Inductive nat := | O: nat | S (n: nat): nat.\n  Fixpoint add (n m: nat): nat :=   match n with   | O => m   | S n' => S (add n' m)   end.\n  Fixpoint mul (n m: nat): nat :=   match n with   | O => O   | S p => add m (mul p m)   end.\n  Theorem add_comm: forall n m,   add n m = add m n.\n Proof.\n Admitted.\n  Lemma mul_0_r: forall n, mul n O = O.\n Proof.\n Admitted.\n  Lemma mul_succ_r:   forall n m, mul n (S m) = add (mul n m) n.\n Proof.\n Admitted.\n  Theorem mul_comm:   forall n m, mul n m = mul m n. \n(**********)\n(** Fill in your proof here*)\n(**********)",
    "proof": "Proof.   intros n m; induction n; simpl.   + rewrite mul_0_r.     reflexivity.   + rewrite mul_succ_r.     rewrite IHn, add_comm.     reflexivity. Qed.",
    "proposition": "mul_comm",
    "id": "./data/105.v"
}