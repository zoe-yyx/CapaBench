{
    "problem": "Require Import Coq.Arith.PeanoNat.\n   Inductive nat := | O: nat | S (n: nat): nat.\n  Fixpoint add (n m: nat): nat :=   match n with   | O => m   | S n' => S (add n' m)   end.\n  Fixpoint mul (n m: nat): nat :=   match n with   | O => O   | S p => add m (mul p m)   end.\n  Theorem mul_comm:   forall n m, mul n m = mul m n.\n Proof.\n Admitted.\n   Theorem mul_1_l : forall n, mul (S O) n = n.\n Proof.\n Admitted.\n  Theorem mul_1_r : forall n, mul n (S O) = n. \n(**********)\n(** Fill in your proof here*)\n(**********)",
    "proof": "Proof. intros. rewrite mul_comm, mul_1_l. reflexivity. Qed. ",
    "proposition": "mul_1_r",
    "id": "./data/110.v"
}