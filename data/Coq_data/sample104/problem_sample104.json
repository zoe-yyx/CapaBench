{
    "problem": "Require Import Coq.Arith.PeanoNat.\n   Inductive nat := | O: nat | S (n: nat): nat.\n  Fixpoint add (n m: nat): nat :=   match n with   | O => m   | S n' => S (add n' m)   end.\n  Fixpoint mul (n m: nat): nat :=   match n with   | O => O   | S p => add m (mul p m)   end.\n  Lemma add_succ_r: forall n m,   add n (S m) = S (add n m).\n Proof.\n Admitted.\n  Theorem add_assoc:   forall n m p, add n (add m p) = add (add n m) p.\n Proof.\n Admitted.\n  Lemma mul_succ_r:   forall n m, mul n (S m) = add (mul n m) n. \n(**********)\n(** Fill in your proof here*)\n(**********)",
    "proof": "Proof.   intros n m; induction n; simpl.   + reflexivity.   + rewrite IHn, add_succ_r.     rewrite <- add_assoc.     reflexivity. Qed.",
    "proposition": "mul_succ_r",
    "id": "./data/104.v"
}