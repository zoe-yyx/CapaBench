{
    "problem": "Require Import Coq.ZArith.ZArith.\n Require Import Coq.micromega.Psatz.\n Require Import Coq.Setoids.Setoid.\n Local Open Scope Z.\n Definition Zcomp (f g: Z -> Z): Z -> Z :=   fun x => f (g x).\n  Definition is_fixpoint (f: Z -> Z) (x: Z): Prop :=   f x = x.\n   Example fixpoint_self_comp23: forall f x,   is_fixpoint (Zcomp f f) x ->   is_fixpoint (Zcomp f (Zcomp f f)) x ->   is_fixpoint f x. \n(**********)\n(** Fill in your proof here*)\n(**********)",
    "proof": "Proof.   unfold is_fixpoint, Zcomp.   intros.   rewrite H in H0.   rewrite H0.   reflexivity. Qed.",
    "proposition": "fixpoint_self_comp23",
    "id": "./data/29.v"
}